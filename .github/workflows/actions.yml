name: C/C++ CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  DEPLOY_USER: haroldstx
  DEPLOY_HOST: 192.168.100.8
  DEPLOY_PATH: /.github/workflows

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Git user
      run: |
        git config --global user.name "haroldstx"
        git config --global user.email "haroldhdiaz@gmail.com"

    - name: Install dependencies
      run: sudo apt-get install -y g++

    - name: Compile project
      run: g++ -o main main.cpp  # Comando de compilación específico

    - name: Lint code
      run: |  # Aquí puedes agregar el comando de linting que utilices
        echo "Linting no configurado"  # Ejemplo de comando de placeholder

    - name: Run unit tests
      run: |  # Aquí puedes agregar los comandos para ejecutar pruebas unitarias
        echo "Pruebas unitarias no configuradas"  # Ejemplo de comando de placeholder

    - name: Create input file
      run: echo "Esta es una prueba. Busca la palabra 'prueba' en este archivo de texto." > Archivo.txt

    - name: Run the program
      run: ./main < Archivo.txt

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Git user
      run: |
        git config --global user.name "haroldstx"
        git config --global user.email "haroldhdiaz@gmail.com"

    - name: Install dependencies
      run: sudo apt-get install -y g++

    - name: Compile project
      run: g++ -o main main.cpp  

    - name: Deploy artifact to production server
      env:
        DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
      run: |
        scp -i $DEPLOY_KEY ./main ${{ env.DEPLOY_USER }}@${{ env.DEPLOY_HOST }}:${{ env.DEPLOY_PATH }}

    - name: Validate deployment
      run: ssh -i $DEPLOY_KEY ${{ env.DEPLOY_USER }}@${{ env.DEPLOY_HOST }} "cd ${{ env.DEPLOY_PATH }} && ./main < Archivo.txt"